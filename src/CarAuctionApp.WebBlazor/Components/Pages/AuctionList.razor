@page "/auctions"
@attribute [StreamRendering]
@inject IHttpClientFactory HttpClientFactory

<h3>AuctionList</h3>

<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Details</th>
        </tr>
    </thead>
    <tbody>

        @if (isLoading)
        {
            <tr>
                <td colspan="3">Loading...</td>
            </tr>
        }
        else if (isError)
        {
            <tr>
                <td colspan="3">Failed to fetch data.</td>
            </tr>
        }

        else
        {
            foreach (var auction in auctions)
            {
                <tr>
                    <th>@auction.Id</th>
                    <td>@auction.Title</td>
                    <td><NavLink class="btn btn-primary" href="@($"/auctions/{auction.Id}")">View detail</NavLink></td>
                </tr>
            }
        }
    </tbody>
</table>

@code {


    record AuctionDto(Guid Id, string Title);

    private List<AuctionDto> auctions = new List<AuctionDto>();
    private bool isLoading = true;
    private bool isError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpClient Http = HttpClientFactory.CreateClient("CarAuctionApp.WebApi");
            auctions = await Http.GetFromJsonAsync<List<AuctionDto>>("/auctions") ?? new List<AuctionDto>();
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine(ex.Message);
            isError = true;
        }
        finally {
            isLoading = false;
        }
    }

}
